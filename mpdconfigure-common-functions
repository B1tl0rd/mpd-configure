#!/bin/bash
#
#  Copyleft (l) 2012, 2013 Ronald van Engelen
#
#  Author: Ronald van Engelen <ronalde@launchpad.net>
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation; either version 2 of the
#  License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, you can find it on the World Wide
#  Web at http://www.gnu.org/copyleft/gpl.html, or write to the Free
#  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
# common functions used by mpdconfigure script
# this files is sourced by mpd-configure 

## default settings
# if not set, default to 0.0.0.0
MPD_HOST="${MPD_HOST:-0.0.0.0}"
# default to $HOME of current user
MPD_USERHOMEDIR="${MPD_USERHOMEDIR:-${HOME}/.mpd}"
# default to $HOME/.mpdconf
MPD_CONFFILE="${MPD_CONFFILE:-${MPD_USERHOMEDIR}/mpd.conf}"

## default paths and files
MPD_CONFDIR="${MPD_USERHOMEDIR}"
MPD_PLAYLISTDIR="${MPD_CONFDIR}/playlists"
MPD_DBFILE="${MPD_CONFDIR}/tag_cache"
MPD_LOGFILE="${MPD_CONFDIR}/mpd.log"
MPD_PIDFILE="${MPD_CONFDIR}/pid"
MPD_STATEFILE="${MPD_CONFDIR}/state"

function echo_stderr() { 
    echo -e "$@" 1>&2; 
}

function die() {
    # exit with error 
    # pass error message
    echo_stderr "ERROR: $@"
    exit 1
}


function echo_debug() {
    echo_stderr "DEBUG: ${1}"    
}

function write_conf() {
    # write a line to the conf file
    # pass a mpd conf line as the single argument

    if [ ! -z "${DEBUG}" ]; then
	echo_debug "Writing line to ${MPD_CONFFILE}"
    fi

    if [ ! -z "$DRYRUN" ]; then
	echo_stderr "DRYRUN: Not writing line to ${MPD_CONFFILE}:\n${1}"	
    else
	# write to the conf file
	echo "${1}" | tee -a ${MPD_CONFFILE}
    fi
}

function write_section() {
    # write a section to the conf file
    # pass a complete mpd conf section as the single argument

    test $# -eq 1 || die "Function write_section() expects a single \
argument containing a CONF SECTION"

    write_conf "${1}"
}


function conf_handler() {
    # pass $SECTION and $CONF to this function to write 
    # it to the mpd conf file
    
    test $# -eq 2 || die "Function conf_handler() expects two arguments: SECTION and CONF"
    
    if [ ! -z "${DEBUG}" ]; then
	echo_debug "Start section: $1"
	echo_debug "\t$2"
	echo_debug "End Section: $1"
    fi

    CONF=$(echo -e "\n### $1 start section" \
	"$2" \
	"\n### $1 end section")
	write_section "$CONF"
}


if [ ! -z "${DEBUG}" ]; then
    echo_debug "common functions initialized" 
fi
